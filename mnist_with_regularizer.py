# -*- coding: utf-8 -*-
"""MNIST with Regularizer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bT0C8iRiDFG3L4c83xXh7RxogsnXAf-u
"""

from keras.datasets import mnist
from keras import models
from keras import layers
from keras.utils import to_categorical
from keras import regularizers

(train_data, train_labels), (test_data, test_labels) = mnist.load_data()

train_data = train_data.reshape((60000, 28 * 28))
train_data = train_data.astype('float32') / 255
test_data = test_data.reshape((10000, 28 * 28))
test_data = test_data.astype('float32') / 255
train_labels = to_categorical(train_labels)
test_labels = to_categorical(test_labels)

partial_train_data = train_data[: 50000]
partial_train_labels = train_labels[: 50000]
validation_train_data = train_data[50000 :]
validation_train_labels = train_labels[50000 :]

network = models.Sequential()

network.add(layers.Dense(400, kernel_regularizer = regularizers.l2(0.001), activation='relu', input_shape=(28 * 28,)))
network.add(layers.Dense(10, activation='softmax'))
network.compile(optimizer = 'rmsprop', loss = 'categorical_crossentropy', metrics = ['accuracy'])
network.fit(partial_train_data, partial_train_labels, epochs = 4, batch_size = 128, validation_data = (validation_train_data, validation_train_labels))

a,b = network.evaluate(test_data, test_labels)
print(a,b)